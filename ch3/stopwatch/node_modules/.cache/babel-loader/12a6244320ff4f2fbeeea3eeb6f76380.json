{"ast":null,"code":"var _jsxFileName = \"/Users/yuki.shimomura/Projects/src/ch3/stopwatch/src/Stopwatch.js\";\nimport React, { Component } from 'react';\nimport './Stopwatch.css';\n\nclass Stopwatch extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLive: false,\n      curTime: 0,\n      startTime: 0\n    };\n    this.timerId = 0;\n  }\n\n  componentWillMount() {\n    this.timerId = setInterval(e => {\n      this.tick();\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  tick() {\n    if (this.state.isLive) {\n      const v = new Date().getTime();\n      this.setState({\n        curTime: v\n      });\n    }\n  }\n\n  clickHandler(e) {\n    if (this.state.isLive) {\n      this.setState({\n        isLive: false\n      });\n      return;\n    }\n\n    const v = new Date().getTime();\n    this.setState({\n      curTime: v,\n      startTime: v,\n      isLive: true\n    });\n  }\n\n  getDisp() {\n    const s = this.state;\n    const delta = s.curTime - s.startTime;\n    const t = Math.floor(delta / 1000);\n    const ss = t % 60;\n    const m = Math.floor(t / 60);\n    const mm = m % 60;\n    const hh = Math.flooe(mm / 60);\n\n    const z = num => {\n      const s = '00' + String(num);\n      return s.substr(s.length - 2, 2);\n    };\n\n    return React.createElement(\"span\", {\n      className: \"dips\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, z(hh), \":\", z(mm), \":\", z(ss));\n  }\n\n  render() {\n    let label = 'START';\n\n    if (this.state.isLive) {\n      label = 'STOP';\n    }\n\n    const disp = this.getDisp();\n\n    const fclick = e => this.clickHandler(e);\n\n    return React.createElement(\"div\", {\n      className: \"Stopwatch\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, disp), React.createElement(\"button\", {\n      onClick: fclick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, label));\n  }\n\n}\n\nexport default Stopwatch;","map":{"version":3,"sources":["/Users/yuki.shimomura/Projects/src/ch3/stopwatch/src/Stopwatch.js"],"names":["React","Component","Stopwatch","constructor","props","state","isLive","curTime","startTime","timerId","componentWillMount","setInterval","e","tick","componentWillUnmount","clearInterval","v","Date","getTime","setState","clickHandler","getDisp","s","delta","t","Math","floor","ss","m","mm","hh","flooe","z","num","String","substr","length","render","label","disp","fclick"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport './Stopwatch.css'\n\nclass Stopwatch extends Component {\n  constructor (props){\n    super(props)\n    this.state = {\n      isLive: false,\n      curTime: 0,\n      startTime: 0\n    }\n    this.timerId = 0\n  }\n\n  componentWillMount () {\n    this.timerId = setInterval(e => {\n      this.tick()\n    }, 1000)\n  }\n\n  componentWillUnmount (){\n    clearInterval(this.timerId)\n  }\n\n  tick(){\n    if(this.state.isLive){\n      const v = new Date().getTime()\n      this.setState({curTime: v})\n    }\n  }\n\n  clickHandler (e) {\n    if(this.state.isLive){\n      this.setState({isLive: false})\n      return\n    }\n\n    const v = new Date().getTime()\n    this.setState({\n      curTime: v,\n      startTime: v,\n      isLive: true\n    })\n  };\n\n  getDisp(){\n    const s = this.state\n    const delta = s.curTime - s.startTime\n    const t = Math.floor(delta / 1000)\n    const ss = t % 60\n    const m = Math.floor(t / 60)\n    const mm = m % 60\n    const hh = Math.flooe(mm / 60)\n    const z = (num) => {\n      const s = '00' + String(num)\n      return s.substr(s.length - 2, 2)\n    }\n    return <span className='dips'>\n    {z(hh)}:{z(mm)}:{z(ss)}\n    </span>\n  }\n\n  render () {\n    let label = 'START'\n    if(this.state.isLive) {\n      label = 'STOP'\n    }\n    const disp = this.getDisp()\n    const fclick = (e) => this.clickHandler(e)\n    return (<div className='Stopwatch'>\n      <div>{disp}</div>\n      <button onClick={fclick}>{label}</button>\n    </div>)\n  }\n}\n\nexport default Stopwatch"]},"metadata":{},"sourceType":"module"}